/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package almoxerifado;

import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanvingla
 */
public class listarPedido extends javax.swing.JInternalFrame {
    
    private String fStatus = "";
    
    /**
     * Creates new form listarPedido
     *
     */
    public listarPedido() {
        //self=this;
        initComponents();
        Acelerador.Acelerador(MenuPrincipal.FramePrincipal);
        this.carregarGrid();
        
        if (!UsuarioLogado.getPermissao().equals("Administrador")) {
            btnRelatorio.setVisible(false);
        }
    }

    public void carregarGrid() {
        
        listarPedidos();
        
    }
    
    public void listarPedidos() {
        try {
            DefaultTableModel dtmMarca = (DefaultTableModel) jTablePedidos.getModel();
            Conexao bd = new Conexao();
            dtmMarca.setRowCount(0);

            bd.conectarBanco();

            String sql = "select * from pedidos";
            
            if (!this.fStatus.equals("")) {
                sql += " where Status = '"+ this.fStatus +"'";
            }
            
            bd.fazerConsulta(sql);

            while (bd.resultado.next()) {
                String campos[] = {
                    bd.resultado.getInt("idpedidos") + "",
                    bd.resultado.getString("DataSolicitacao"),
                    bd.resultado.getString("Datadeentrega"),
                    bd.resultado.getString("DataAprovacao"),
                    bd.resultado.getString("Status"),
                    bd.resultado.getString("usuario")};
                dtmMarca.addRow(campos);
            }
            bd.desconectarBanco();
        } catch (Exception exc) {
            System.out.println(exc.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePedidos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnAprovar = new javax.swing.JButton();
        btnNegar = new javax.swing.JButton();
        btnEntregar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jStatus = new javax.swing.JComboBox<>();
        btnFiltrar = new javax.swing.JButton();
        btnRelatorio = new javax.swing.JButton();

        setTitle("Zika Sistemas");

        jTablePedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id_pedidos", "Data Solicitação", "Data de entrega", "Data Aprovação", "Status", "Usuário"
            }
        ));
        jScrollPane1.setViewportView(jTablePedidos);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 28)); // NOI18N
        jLabel2.setText("Pedidos");
        jLabel2.setPreferredSize(new java.awt.Dimension(120, 26));

        btnAprovar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnAprovar.setText("Aprovar ");
        btnAprovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAprovarActionPerformed(evt);
            }
        });

        btnNegar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnNegar.setText("Negar Pedido");
        btnNegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegarActionPerformed(evt);
            }
        });

        btnEntregar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnEntregar.setText("Entregar");
        btnEntregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntregarActionPerformed(evt);
            }
        });

        jLabel1.setText("Filtrar por status:");

        jStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pendente", "Aprovado", "Negado", "Finalizado" }));

        btnFiltrar.setText("Filtrar");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        btnRelatorio.setText("Gerar Relatório");
        btnRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addComponent(btnRelatorio)
                .addGap(51, 51, 51)
                .addComponent(btnEntregar)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAprovar)
                        .addGap(36, 36, 36)
                        .addComponent(btnNegar)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFiltrar)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAprovar)
                    .addComponent(btnNegar)
                    .addComponent(btnEntregar)
                    .addComponent(btnRelatorio))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 117, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAprovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAprovarActionPerformed
        // TODO add your handling code here:
        int linha = jTablePedidos.getSelectedRow();
        if (linha > - 1) {
            String idpedido = jTablePedidos.getValueAt(linha, 0).toString();
            String status = jTablePedidos.getValueAt(linha, 4).toString();

            if (status.equals("Pendente")) {
                Conexao c = new Conexao();
                try {
                    c.conectarBanco();

                    // salvar
                    c.operacaoDados("update pedidos set Status = 'Aprovado', DataAprovacao = (select now() ) where idpedidos =  " + idpedido);

                    //desconectar bds
                    c.desconectarBanco();

                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                } catch (ClassNotFoundException ex) {
                    System.out.println(ex.getMessage());
                } catch (InstantiationException ex) {
                    System.out.println(ex.getMessage());
                } catch (IllegalAccessException ex) {
                    System.out.println(ex.getMessage());
                }
                this.carregarGrid();
                JOptionPane.showMessageDialog(null, "Pedido aprovado com sucesso.");
            } else {
                JOptionPane.showMessageDialog(null, "Apenas é permitido aprovar pedidos pendentes.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione um pedido.");
        }


    }//GEN-LAST:event_btnAprovarActionPerformed

    private void btnNegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegarActionPerformed
        // TODO add your handling code here:
        int linha = jTablePedidos.getSelectedRow();
        if (linha > - 1) {
            String idpedido = jTablePedidos.getValueAt(linha, 0).toString();
            String status = jTablePedidos.getValueAt(linha, 4).toString();

            if (status.equals("Pendente")) {
                Conexao c = new Conexao();
                try {
                    c.conectarBanco();

                    // salvar
                    c.operacaoDados("update pedidos set Status = 'Negado' where idpedidos =  " + idpedido);

                    //desconectar bds
                    c.desconectarBanco();

                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                } catch (ClassNotFoundException ex) {
                    System.out.println(ex.getMessage());
                } catch (InstantiationException ex) {
                    System.out.println(ex.getMessage());
                } catch (IllegalAccessException ex) {
                    System.out.println(ex.getMessage());
                }
                this.carregarGrid();
                JOptionPane.showMessageDialog(null, "Pedido negado com sucesso.");
            } else {
                JOptionPane.showMessageDialog(null, "Apenas é permitido negar pedidos pendentes.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um pedido.");
        }


    }//GEN-LAST:event_btnNegarActionPerformed

    private void btnEntregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntregarActionPerformed
        // TODO add your handling code here:

        String idpedido = null;
        int linha = jTablePedidos.getSelectedRow();
        if (linha > - 1) {
            idpedido = jTablePedidos.getValueAt(linha, 0).toString();
            String status = jTablePedidos.getValueAt(linha, 4).toString();
            if (status.equals("Aprovado")) {
                Entregar entre = new Entregar(idpedido);
                entre.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Apenas é permitido entregar pedidos aprovados.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um pedido.");
        }


    }//GEN-LAST:event_btnEntregarActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        // TODO add your handling code here:
        this.fStatus = this.jStatus.getSelectedItem().toString();
        listarPedidos();
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void btnRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioActionPerformed
        // TODO add your handling code here:
       ArrayList<String[]> dados = new ArrayList();
       
       int totalLinhas = jTablePedidos.getRowCount();
       for(int linha = 0; linha < totalLinhas; linha++) {
           String row[] = {
               jTablePedidos.getValueAt(linha, 0).toString(),
               jTablePedidos.getValueAt(linha, 1).toString(),
               jTablePedidos.getValueAt(linha, 4).toString(),
               jTablePedidos.getValueAt(linha, 5).toString()
           };
           dados.add(row);
       }
       
       String cabeca[] = {
           "ID Pedido",
           "Data Solicitação",
           "Status",
           "Usuário"
       };
       String info[] = {};
       
        ReportModel repo = new ReportModel("relatorio-pedidos.pdf", "titulo.pdf", cabeca, info, dados);
        PDFGenerator pdf = new PDFGenerator(repo);
    }//GEN-LAST:event_btnRelatorioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAprovar;
    private javax.swing.JButton btnEntregar;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnNegar;
    private javax.swing.JButton btnRelatorio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jStatus;
    public javax.swing.JTable jTablePedidos;
    // End of variables declaration//GEN-END:variables
}
